{% assign main_menu_linklist = linklists[section.settings.menu].links | default: blank %}

<div class='relative z-20 bg-white' id='header-wrapper'>
  <div class='mx-auto px-4 sm:px-6'>
    <div class='flex items-center pt-3 pb-6 md:justify-start md:space-x-10'>
      <div class='flex items-center justify-start truncate lg:flex-1'>
        <a
          href='{{ section.settings.logo_link | default: '/' }}'
          class='inline-flex cursor-pointer items-center'
        >
          {% if section.settings.logo != blank %}
            <img
              src='{{ section.settings.logo | img_url: '240px' }}'
              alt='{{ shop.name }}'
              class='hidden h-24 w-auto md:block'
            >
          {% endif %}
          <h1 class='ml-2 block truncate text-xl font-bold tracking-wide text-gray-800 md:hidden'>
            {{ section.settings.header_logo_text }}
          </h1>
        </a>
      </div>
      <div class='ml-auto md:hidden'>
        <button
          type='button'
          class='search-bar-open inline-flex cursor-pointer items-center justify-center p-2 text-gray-500 hover:text-gray-900'
        >
          {% render 'icon-search' %}
        </button>
      </div>
      <div class='-my-2 -mr-2 md:hidden'>
        <button
          id='mobile-menu-open'
          type='button'
          class='inline-flex cursor-pointer items-center justify-center bg-white p-2 focus:outline-none'
        >
          {% render 'icon-menu' %}
        </button>
      </div>
      <nav class='hidden space-x-10 md:flex'>
        {% for link in main_menu_linklist %}
          {% if link.links != blank %}
            {% assign submenu_id = 'submenu-' | append: forloop.index %}
            <div class='relative'>
              <button
                type='button'
                class='menu-dropdown-toggle inline-flex cursor-pointer items-center text-base text-gray-500 hover:text-gray-900'
                data-target='{{ submenu_id }}'
              >
                {{ link.title }}
                {% render 'icon-dropdown-arrow' %}
              </button>
              <div
                id='{{ submenu_id }}'
                class='absolute z-10 mt-5 -ml-5 hidden w-screen max-w-md transform overflow-hidden rounded-md border border-gray-300 bg-white px-2 shadow-lg sm:px-0 lg:left-1/2 lg:ml-0 lg:-translate-x-1/2'
              >
                <div class='relative grid gap-6 px-5 py-6 sm:gap-8 sm:p-8'>
                  {% for childlink in link.links %}
                    <a
                      href='{{ childlink.url }}'
                      class='-m-3 flex items-start rounded-md p-3 hover:bg-gray-100'
                    >
                      <div class='ml-4'>
                        <p class='text-base text-gray-500 hover:text-gray-900'>
                          {{ childlink.title }}
                        </p>
                      </div>
                    </a>
                  {% endfor %}
                </div>
              </div>
            </div>
          {% else %}
            <div>
              <a href='{{ link.url }}' class='text-base text-gray-500 hover:text-gray-900'>
                {{ link.title }}
              </a>
            </div>
          {% endif %}
        {% endfor %}
      </nav>
      <div class='hidden items-center justify-end space-x-5 md:flex md:flex-1'>
        <button
          type='button'
          class='search-bar-open cursor-pointer text-base whitespace-nowrap text-gray-500 hover:text-gray-900'
        >
          {% render 'icon-search' %}
        </button>
        <test-component-cart-icon>{% render 'cart-icon' %}</test-component-cart-icon>
      </div>
    </div>
  </div>
  <div
    id='mobile-menu'
    class='absolute inset-x-0 top-0 z-10 hidden origin-top-left transform p-2 md:hidden'
  >
    <div class='w-full rounded-md border border-gray-300 bg-white shadow-lg'>
      <div class='divide-y-2 divide-gray-50 p-5'>
        <div class='flex items-center justify-between pb-3'>
          <h1 class='text-lg text-gray-500'>{{ section.settings.mobile_menu_title }}</h1>
          <button
            id='mobile-menu-close'
            type='button'
            class='cursor-pointer rounded-md bg-white p-2 text-gray-500'
          >
            {% render 'icon-close' %}
          </button>
        </div>
        <nav class='grid gap-y-7 pt-3'>
          {% for link in main_menu_linklist %}
            {% assign mobile_submenu_id = 'mobile-submenu-' | append: forloop.index %}
            {% if link.links != blank %}
              <div>
                <button
                  type='button'
                  class='mobile-submenu-toggle flex w-full cursor-pointer items-center justify-between rounded-md p-3 text-base text-gray-500 hover:bg-gray-50 hover:text-gray-900'
                  data-target='{{ mobile_submenu_id }}'
                >
                  <span>{{ link.title }}</span>
                  {% render 'icon-dropdown-arrow' %}
                </button>
                <div id='{{ mobile_submenu_id }}' class='grid hidden gap-y-7 py-3 pl-4'>
                  {% for childlink in link.links %}
                    <a
                      href='{{ childlink.url }}'
                      class='mt-2 flex items-center rounded-md p-3 text-base text-gray-500 hover:bg-gray-50 hover:text-gray-900'
                    >
                      <span class='ml-3 font-medium'>{{ childlink.title }}</span>
                    </a>
                  {% endfor %}
                </div>
              </div>
            {% else %}
              <a
                href='{{ link.url }}'
                class='flex items-center rounded-md p-3 text-base text-gray-500 hover:bg-gray-50 hover:text-gray-900'
              >
                {{ link.title }}
              </a>
            {% endif %}
          {% endfor %}
        </nav>
      </div>
    </div>
  </div>
  <div
    id='search-bar'
    class='absolute top-0 hidden w-full border border-gray-300 bg-white px-5'
  >
    <button
      id='search-bar-close'
      type='button'
      class='absolute top-0 right-0 mt-5 mr-5 cursor-pointer text-gray-500'
    >
      {% render 'icon-close' %}
    </button>
    <div class='flex h-40 items-center justify-center'>
      <form action='{{ routes.search_url }}' method='get' class='flex-auto'>
        <div class='flex rounded-md border border-gray-300 text-gray-500'>
          <input
            type='text'
            name='q'
            placeholder='search products'
            class='h-10 w-full bg-white px-2 text-sm focus:outline-none'
          >
          <button type='submit' class='cursor-pointer bg-orange-600 px-2'>
            {% render 'icon-search-white' %}
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Header logo"
    },
    {
      "type": "text",
      "id": "header_logo_text",
      "label": "Header logo text",
      "default": "YourBrand"
    },
    {
      "type": "url",
      "id": "logo_link",
      "label": "Logo Link URL",
      "default": "/",
      "info": "URL where the logo and mobile title will redirect when clicked."
    },
    {
      "type": "text",
      "id": "mobile_menu_title",
      "label": "Title",
      "default": "Menu",
      "info": "This is the title of the mobile menu window"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Header Menu",
      "default": "main-menu"
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    function toggleVisibilityOnClick(buttonId, targetId, show = true) {
      const button = document.getElementById(buttonId);
      const target = document.getElementById(targetId);
      if (!button || !target) return;

      button.addEventListener('click', () => {
        if (show) {
          target.classList.remove('hidden');
        } else {
          target.classList.add('hidden');
        }
      });
    }
    toggleVisibilityOnClick('mobile-menu-open', 'mobile-menu', true);
    toggleVisibilityOnClick('mobile-menu-close', 'mobile-menu', false);
    document.querySelectorAll('.search-bar-open').forEach((button) => {
      const target = document.getElementById('search-bar');
      if (!target) return;

      button.addEventListener('click', () => {
        target.classList.remove('hidden');
      });
    });

    toggleVisibilityOnClick('search-bar-close', 'search-bar', false);
    function setupToggleButtons(selector) {
      document.querySelectorAll(selector).forEach((button) => {
        const targetId = button.getAttribute('data-target');
        const target = document.getElementById(targetId);
        if (!target) return;

        button.addEventListener('click', (e) => {
          e.stopPropagation();
          target.classList.toggle('hidden');
        });
      });
    }
    setupToggleButtons('.menu-dropdown-toggle');
    setupToggleButtons('.mobile-submenu-toggle');
    document.addEventListener('click', () => {
      document.querySelectorAll('[id^="submenu-"]').forEach((submenu) => {
        submenu.classList.add('hidden');
      });
    });
  });
</script>
